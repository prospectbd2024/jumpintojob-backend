services:
  web:
    build:
      context: .
      dockerfile: ./docker/production/nginx/Dockerfile
    volumes:
      # -----------------------------------------------------------
      - laravel-storage-production:/var/www/storage
      - laravel-public-assets:/var/www/public/build
    networks:
      - laravel-production
    ports:
      # -----------------------------------------------------------
      - "${NGINX_PORT:-8089}:80"
    depends_on:
      - php-fpm
    restart: unless-stopped

  mariadb:
    image: mariadb:10.5.7
    ports:
      - "3308:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=app
      - MYSQL_USER=root
      - MYSQL_PASSWORD=app
      - MYSQL_DATABASE=jumpinto_db
    restart: unless-stopped
    networks:
      - laravel-production
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
    volumes:
      - mongodb-data:/data/db
    restart: unless-stopped
    networks:
      - laravel-production
  htmltoimage:
    image: "monkeyphysics/html-to-image"
    ports:
      - "3033:3033"
    restart: unless-stopped
    networks:
      - laravel-production
  php-fpm:
    build:
      context: .
      dockerfile: ./docker/common/php-fpm/Dockerfile
      target: production
    volumes:
      - laravel-public-assets:/var/www/public/build
      - laravel-storage-production:/var/www/storage
    env_file:
      - .env
    networks:
      - laravel-production
    depends_on:
      mariadb:
        condition: service_started
      mongodb:
        condition: service_started
volumes:
  mongodb-data:
  laravel-storage-production:
  laravel-public-assets:

networks:
  default:
    name: backend-network
  laravel-production:
